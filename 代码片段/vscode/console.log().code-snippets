{
  // Place your 全局 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  "Print to console": {
    "scope": "javascript,typescript",
    "prefix": "cl",
    "body": [
      "console.log($1);"
    ],
    "description": "Log output to console"
  },
  "Print to debugger": {
    "scope": "javascript,typescript",
    "prefix": "de",
    "body": [
      "debugger",
      "$1"
    ],
    "description": "Log output to debugger"
  },
  "Print to before or after": {
    "scope": "css,less",
    "prefix": "::",
    "body": [
      "content:'';",
      "display: inline-block;",
      "position: absolute;",
      "top: 50%;",
      "left: 0;",
      "transform: translateY(-50%);",
      "width:3px;",
      "height:52px;",
      "background-color: #ed4014;"
    ],
    "description": "Log output to before or after"
  },
  "Print to ellipsis": {
    "scope": "css,less",
    "prefix": "ell",
    "body": [
      "overflow: hidden;",
      "text-overflow: ellipsis;",
      "white-space: nowrap;"
    ],
    "description": "Log output to ellipsis"
  },
  "Print to vue": {
    "scope": "vue",
    "prefix": "vue",
    "body": [
      "<template>",
      "\t<div class='container'>",
      "\t\t<div class='$1' style='padding:16px'>",
      "\t\t\t<div class='top-area'></div>",
      "\t\t\t<div class='body-area mt16'></div>",
      "\t\t</div>",
      "\t</div>",
      "</template>\n",
      "<script>",
      "export default {",
      "\tname: '',",
      "\tcomponents: {},",
      "\tdata() {",
      "\t\treturn {};",
      "\t},",
      "\tcreated() {},",
      "\tmounted() {},",
      "\twatch: {},",
      "\tcomputed: {},",
      "\tmethods: {},",
      "};",
      "</script>\n",
      "<style scoped>",
      ".top-area {",
      "\tdisplay: flex;",
      "\tjustify-content: flex-end;",
      "\talign-items: center;",
      "\tmin-height:42px;",
      "}",
      ".page {",
      "\tfloat: none;",
      "\ttext-align: center;",
      "\tmargin-right: 0;",
      "\tmargin-top: 12px;",
      "}",
      ".mt16 {",
      "\tmargin-top: 16px;",
      "}",
      "</style>"
    ],
    "description": "Log output to vue"
  },
  "Print to vueModalMod": {
    "scope": "vue",
    "prefix": "vmm",
    "body": [
      "<template> <Modal v-model='showModalKey' :title='title' :closable='true' :mask-closable='false' footer-hide :width='width' :fullscreen='false' @on-cancel='closeModal' > <div class='modal' style='padding: 0 16px 0'> </div> <div slot='footer' style='text-align: right'> <Button @click='closeModal'>取消</Button> <Button type='primary' @click='modalOk' :loading='loading' >保存</Button > </div> </Modal> </template>",
      "<script> export default { name: '', components: {}, props: { value: { type: Boolean, default: false, }, title: { type: String, default: '查看', }, width: { type: String, default: '800', }, }, model: { prop: 'value', event: 'on-change', }, data() { return { loading: false, showModalKey: this.value, }; }, created() {}, mounted() {}, watch: { value(val) { if (val) { this.showModal(); } else { this.closeModal(); } }, }, computed: {}, methods: { showModal() { this.showModalKey = true; this.loading = true; }, closeModal() { this.showModalKey = false; this.\\$emit('on-change', false); this.\\$emit('cancel', false); }, modalOk() {}, }, }; </script>",
      "<style scoped></style>"
    ],
    "description": "Log output to vueModalMod"
  },
  "Print to tableTemplate": {
    "scope": "html",
    "prefix": "tt",
    "body": [
      "<div class='table_box'>",
      "\t<Table :columns='tableColumns' :data='tableData' :loading='loading' border></Table>",
      "</div>",
      "<Page",
      "\tclass='page'",
      "\t@on-change='changePage'",
      "\t:total='page.totalNum'",
      "\t:current='page.pageNum'",
      "\t:page-size='page.pageSize'",
      "\tshow-elevator",
      "\tshow-total",
      "/>"
    ],
    "description": "Log output to tableTemplate"
  },
  "Print to tableData": {
    "scope": "javascript",
    "prefix": "td",
    "body": [
      "loading: false,",
      "tableColumns: [",
      "\t{ title: '标题名称', key: '', },",
      "\t{ title: '操作', key: '', width:120, render: (h, params) => {",
      "\t\treturn h('div', [",
      "\t\t\th('a',{style: {marginRight: '16px',color: '#1B81FF',display: 'inline-block',},on: {click: () => {this.show(params.row);},},},'修改'),",
      "\t\t\th('a',{style: {color: '#FF7A7A',display: 'inline-block',},on: {click: () => {this.remove(params.row);},},},'删除'),",
      "\t\t])},},",
      "\t],",
      "tableData: [{}],",
      "page: {",
      "\tpageNum: 1,",
      "\tpageSize: 10,",
      "\ttotalNum: 0,",
      "},"
    ],
    "description": "Log output to tableData"
  },
  "Print to pageMethod": {
    "scope": "javascript",
    "prefix": "tp",
    "body": [
      "changePage(i) {",
      "\tthis.page.pageNum = i;",
      "},"
    ],
    "description": "Log output to pageMethod"
  },
  "Print to ModalTemplate": {
    "scope": "html",
    "prefix": "mt",
    "body": [
      "<Modal v-model='showModal' :title='modalTitle' width='700px' :closable='true' :mask-closable='false' @on-cancel='modalClose'>",
      "\t<div style='min-height: 300px'>",
      "\t\t<Form :model='data' :rules='ruleValidate' ref='modalFef' :label-width='100' @submit.native.prevent>",
      "\t\t\t<FormItem label='标题：' prop='title'>",
      "\t\t\t\t<Input type='text' v-model='data.title' placeholder='请输入标题' style='width: 240px' maxlength='50'></Input>",
      "\t\t\t</FormItem>",
      "\t\t</Form>",
      "\t</div>",
      "\t<div slot='footer' style='text-align: right'>",
      "\t\t<Button @click='modalClose'>取消</Button>",
      "\t\t<Button type='primary' @click='modalOk' :loading='loading'>保存</Button>",
      "\t</div>",
      "</Modal>"
    ],
    "description": "Log output to Modal"
  },
  "Print to ModalData": {
    "scope": "javascript",
    "prefix": "md",
    "body": [
      "showModal: false,",
      "modalTitle: '',",
      "data: {",
      "\tid: '',",
      "\ttitle: '',",
      "},",
      "ruleValidate: {",
      "\ttitle: [",
      "\t\t{",
      "\t\t\trequired: true,",
      "\t\t\tmessage: '请输入标题',",
      "\t\t\ttrigger: 'blur',",
      "\t\t},",
      "\t],",
      "},"
    ],
    "description": "Log output to ModalData"
  },
  "Print to ModalMethods": {
    "scope": "javascript",
    "prefix": "mm",
    "body": [
      "initData() {",
      "\tthis.data.id = '';",
      "\tthis.data.title = '';",
      "},",
      "show(row) {",
      "\tthis.showModal = true;",
      "\tthis.modalTitle = '新增';",
      "\tthis.initData();",
      "\tif (row.id) {",
      "\t\tthis.modalTitle = '修改';",
      "\t\tthis.data.id = row.id;",
      "\t\tthis.data.title = row.title;",
      "\t}",
      "},",
      "modalOk() {",
      "\tthis.\\$refs['modalFef'].validate((valid) => {",
      "\t\tif (!valid) { return;",
      "\t\t} else { console.log(valid)",
      "\t\t}",
      "\t});",
      "},",
      "modalClose() {",
      "\tthis.showModal = false;",
      "\tthis.\\$refs['modalFef'].resetFields();",
      "},",
      "remove(row) {",
      "\tthis.\\$Modal.confirm({",
      "\t\tclosable: true,",
      "\t\ttitle: '提示',",
      "\t\tcontent: '确定删除' + row.title + '吗？',",
      "\t\tonOk: () => {",
      "\t\t},",
      "\t});",
      "},"
    ],
    "description": "Log output to ModalMethods"
  },
  "Print to Button": {
    "scope": "html",
    "prefix": "btn",
    "body": [
      "<div><Button @click='show$1' type='primary' style='margin: 5px 5px 5px 10px'>新增</Button></div>"
    ],
    "description": "Log output to ModalMethods"
  },
  "Print to requestMethods": {
    "scope": "javascript",
    "prefix": "req",
    "body": [
      "() {",
      "\tlet params = {};",
      "\tthis.loading = true;",
      "\tthis.axios",
      "\t\t.post(this.interfaceUrl + '$1', this.qs(params))",
      "\t\t.then((res) => {",
      "\t\t\tif (res.data.state) {",
      "\t\t\t\tif (res.data.temp) {",
      "\t\t\t\t\tthis.temp = res.data.temp;",
      "\t\t\t\t}else{",
      "\t\t\t\t\tthis.temp = []",
      "\t\t\t\t}",
      "\t\t\t\tthis.\\$Message.success(`${res.data.msg}`);",
      "\t\t\t} else {",
      "\t\t\t\tthis.\\$Message.error(`${res.data.msg}`);",
      "\t\t\t}",
      "\t\t\tthis.loading = false;",
      "\t\t})",
      "\t\t.catch((e) => {",
      "\t\t\tthis.loading = false;",
      "\t\t\tconsole.error(e);",
      "\t\t\tthis.\\$Message.error(e.message);",
      "\t\t});",
      "},"
    ],
    "description": "Log output to ModalMethods"
  },
  "Print to try": {
    "scope": "javascript",
    "prefix": "tr",
    "body": [
      "try {",
      "$1",
      "} catch (error) {",
      "console.error(error);",
      "}"
    ],
    "description": "Log output to ModalMethods"
  },
  "Print to Promise": {
    "scope": "javascript",
    "prefix": "pro",
    "body": [
      "return new Promise((resolve,reject) => {",
      "})"
    ],
    "description": "Log output to ModalMethods"
  },
  "Print to props": {
    "scope": "javascript",
    "prefix": "sni-props",
    "body": [
      "$1: {",
      "type: [String, Number],",
      "default: '',",
      "},"
    ],
    "description": "Log output to ModalMethods"
  },
  "Print to el-table-column > template": {
    "scope": "html",
    "prefix": "etemp",
    "body": [
      "<template slot-scope='scope'>",
      "$1",  
      "</template>"
    ],
    "description": "Log output to ModalMethods"
  },
  "Print to dict-tag": {
    "scope": "html",
    "prefix": "dict",
    "body": [
      " <dict-tag :options='dict.type.$1' :value='scope.row.$2'/>",
    ],
    "description": "Log output to ModalMethods"
  },
}